마우스 (p.78~89)
 - lParam, wParam 에 전달된 정보
	마우스클릭 + 키보드클릭 동시에 했을 때
	필터링 (LButton + Shift)
 - 클라이언트 영역에서 발생하는 메시지와 비클라이언트 영역에서
   발생하는 메시지는 부가정보가 다르다.
 - 마우스 캡쳐? : 화면 밖을 벗어나도 캡쳐 기능을 사용하면 됨.
	마우스 : 위치(커서) 해당 윈도우에 전달
	키보드 : 활성화(캐럿)
키보드(p.89~97)
키보드를 클릭했을 때 얻을 수 있는 키보드 값
   WM_KEYDOWN
 - 스캔 코드 : [모든 자판의 고유 값]제조사별 부여하는 값.
 - 가상키 코드 : [모든 자판의 고유 값]모든 제조사가 통일하고 있는 값.
   WM_CAHR <- TranslateMessage(&msg); : 메시지루프
 - 아스키 코드 : 실제 문자에 부여되는 값.

키보드 발생 시 lParam, wParam의 값?

97p의 타이머는 안봐도 됨, 비트맵도 안봐도 됨.

정리할사항 :
메뉴 사용법(p.120~129)
컨트롤사용법(p.130~)

회원의 정보를
저장
검색
수정
삭제

[입력](*그룹박스) 
 ㄴ 이름       [텍스트박스]
 ㄴ 성별         [남] [여] (라디오박스)
 ㄴ 전화번호 [텍스트박스]
 ㄴ                     [저장하기](버튼)

1) 회원 구조체 정의 MEMBER
2) 전역 변수 선언 vector<MEMBER> g_member;
3) 저장버튼 통지메시지(클릭했을 때, 각 컨트롤의 입력 정보를 획득) 
	member 생성 후 push_back
4) 회원의 정보를 전체 출력 : 리스트박스
 4-0) 리스트박스에 출력되어 있는 전체 데이터 모두 삭제
 4-1) 전체 출력 버튼 클릭 메시지 통지 처리
 4-2) vector에 저장된 모든 멤버의 값을 획득(for) wsprintf 문장 활용, 문자열 만들기
 4-3) 리스트 박스에 추가(LB_ADDSTRING 메시지, lParam)

5) 회원의 정보를 검색
 5-1) 리스트박스의 SEL 변경하는 통지메시지처리
 5-2) 인덱스를 획득 -> 문자열 획득
 5-3) 획득한 문자열은 타이틀바에 출력
 5-4) 획득한 인덱스는 vector에 저장된 멤버 획득
 5-5) 획득한 멤버로 검색 영역의 컨트롤을 초기화

[검색](*그룹박스) 
 ㄴ 이름       [텍스트박스]
 ㄴ 성별         [남] [여] (라디오박스)
 ㄴ 전화번호 [텍스트박스]


 [고칡]
Control들은 ui로 봤을 때, 기능 별로 파일을 나눈다.
핸들은 기능 별 cpp 파일에 전역으로 선언한다.

ex) ui_insert, ui_listbox, ui_select, ui_print

